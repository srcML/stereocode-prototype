<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="hybrid_verifier.cpp"><comment type="block" format="doxygen">/** @stereotype boolean_verifier equality_verifier hybrid_verifier api_utility_verifier */</comment>
<function stereotype="boolean_verifier equality_verifier hybrid_verifier api_utility_verifier "><type><name>void</name></type> 
<name><name>CommandLineParserTest</name><operator>::</operator><name>testEmptyCommandLine</name></name><parameter_list>()</parameter_list>
<block>{
  <decl_stmt><decl><specifier>static</specifier> <type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>lines</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="string">""</literal></expr>, <expr><name>NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>parse</name><argument_list>( <argument><expr><name>lines</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>none</name></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>( <argument><expr><name>none</name></expr></argument>, <argument><expr><call><name><name>_parser</name><operator>-&gt;</operator><name>getEncoding</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>( <argument><expr><name>none</name></expr></argument>, <argument><expr><call><name><name>_parser</name><operator>-&gt;</operator><name>getTestPath</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>( <argument><expr><name>none</name></expr></argument>, <argument><expr><call><name><name>_parser</name><operator>-&gt;</operator><name>getXmlFileName</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>( <argument><expr><name>none</name></expr></argument>, <argument><expr><call><name><name>_parser</name><operator>-&gt;</operator><name>getXmlStyleSheet</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT</name><argument_list>( <argument><expr><operator>!</operator><call><name><name>_parser</name><operator>-&gt;</operator><name>noTestProgress</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT</name><argument_list>( <argument><expr><operator>!</operator><call><name><name>_parser</name><operator>-&gt;</operator><name>useBriefTestProgress</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT</name><argument_list>( <argument><expr><operator>!</operator><call><name><name>_parser</name><operator>-&gt;</operator><name>useCompilerOutputter</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT</name><argument_list>( <argument><expr><operator>!</operator><call><name><name>_parser</name><operator>-&gt;</operator><name>useCoutStream</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT</name><argument_list>( <argument><expr><operator>!</operator><call><name><name>_parser</name><operator>-&gt;</operator><name>useTextOutputter</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CPPUNIT_ASSERT</name><argument_list>( <argument><expr><operator>!</operator><call><name><name>_parser</name><operator>-&gt;</operator><name>useXmlOutputter</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
}</block></function></unit>
